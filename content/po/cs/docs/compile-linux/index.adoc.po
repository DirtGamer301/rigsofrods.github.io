# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2015-08-10 21:50+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: content/source/docs/compile-linux/index.adoc:1
#, no-wrap
msgid "Compiling on Linux"
msgstr ""

#. type: Plain text
#: content/source/docs/compile-linux/index.adoc:15
msgid ""
"If you just want to install RoR without much hassle then have a look at "
"these shell scripts, they bundle all necessary steps: link:http://rigsofrods."
"com/threads/114853-Install-scripts-for-latest-snapshot-for-Debian-Ubuntu-"
"Mint[Ubuntu/Debian/Mint]"
msgstr ""

#. type: Plain text
#: content/source/docs/compile-linux/index.adoc:17
msgid ""
"Ready made packages for various Linux distributions are available link:"
"http://rigsofrods.com/threads/113517-Collection-of-prepuilt-packages-for-"
"various-Linux-distributions[here]."
msgstr ""

#. type: Plain text
#: content/source/docs/compile-linux/index.adoc:19
msgid "toc::[]"
msgstr ""

#. type: Title ==
#: content/source/docs/compile-linux/index.adoc:20
#, no-wrap
msgid "Getting the required build dependencies"
msgstr ""

#. type: Title ===
#: content/source/docs/compile-linux/index.adoc:22
#, no-wrap
msgid "Installing required packages usually found in repositories"
msgstr ""

#. type: Title ====
#: content/source/docs/compile-linux/index.adoc:24
#, no-wrap
msgid "Ubuntu"
msgstr ""

#. type: delimited block -
#: content/source/docs/compile-linux/index.adoc:29
#, no-wrap
msgid ""
"sudo apt update\n"
"sudo apt install subversion mercurial git automake cmake build-essential pkg-config doxygen libfreetype6-dev libfreeimage-dev libzzip-dev scons libcurl4-openssl-dev nvidia-cg-toolkit libgl1-mesa-dev libxrandr-dev libx11-dev libxt-dev libxaw7-dev libglu1-mesa-dev libxxf86vm-dev uuid-dev libuuid1 libgtk2.0-dev libboost-all-dev libopenal-dev libois-dev libssl-dev libwxgtk3.0-dev\n"
msgstr ""

#. type: Title ====
#: content/source/docs/compile-linux/index.adoc:31
#, no-wrap
msgid "Gentoo"
msgstr ""

#. type: delimited block -
#: content/source/docs/compile-linux/index.adoc:39
#, no-wrap
msgid ""
"mkdir /etc/portage\n"
"echo \"media-libs/freeimage ~x86\" >> /etc/portage/package.keywords\n"
"echo \"media-libs/freeimage\" >> /etc/portage/package.unmask\n"
"emerge -av cmake devil boost nvidia-cg-toolkit subversion wxGTK freeimage zziplib\n"
"eselect wxwidgets set 1\n"
msgstr ""

#. type: Title ==
#: content/source/docs/compile-linux/index.adoc:41
#, no-wrap
msgid "Compiling and installing missing packages"
msgstr ""

#. type: Plain text
#: content/source/docs/compile-linux/index.adoc:43
msgid ""
"You have to install all software which is not available in your "
"distributions' repository by hand. This is necessary to fulfill the required "
"dependencies."
msgstr ""

#. type: Plain text
#: content/source/docs/compile-linux/index.adoc:45
#, no-wrap
msgid "*Please note*: OGRE shipped with some distributions does not have support for Cg enabled which is needed for Rigs of Rods (otherwise shaders will be missing, e.g. completely white cars) which is why you should compile it yourself.\n"
msgstr ""

#. type: Title ==
#: content/source/docs/compile-linux/index.adoc:46
#, no-wrap
msgid "Downloading the source code"
msgstr ""

#. type: delimited block -
#: content/source/docs/compile-linux/index.adoc:51
#, no-wrap
msgid ""
"git clone https://github.com/RigsOfRods/rigs-of-rods.git\n"
"cd rigs-of-rods\n"
msgstr ""

#. type: Title ==
#: content/source/docs/compile-linux/index.adoc:53
#, no-wrap
msgid "Configuring the source code"
msgstr ""

#. type: Plain text
#: content/source/docs/compile-linux/index.adoc:55
msgid ""
"There are two different ways to configure your RoR build, either via Command "
"Line Interface (aka CLI) or via GUI interface. CLI is the most straight "
"forward. If you are only interested in compiling standard RoR, this is the "
"recommended method."
msgstr ""

#. type: Title ===
#: content/source/docs/compile-linux/index.adoc:56
#, no-wrap
msgid "CLI"
msgstr ""

#. type: delimited block -
#: content/source/docs/compile-linux/index.adoc:67
#, no-wrap
msgid ""
"cmake -DROR_USE_MYGUI=\"TRUE\" \\\n"
"-DROR_USE_OPENAL=\"TRUE\" \\\n"
"-DROR_USE_SOCKETW=\"TRUE\" \\\n"
"-DROR_USE_PAGED=\"TRUE\" \\\n"
"-DROR_USE_CAELUM=\"TRUE\" \\\n"
"-DROR_USE_ANGELSCRIPT=\"TRUE\" \\\n"
"-DCMAKE_BUILD_TYPE=RELEASE \\\n"
".\n"
msgstr ""

#. type: Title ===
#: content/source/docs/compile-linux/index.adoc:69
#, no-wrap
msgid "GUI"
msgstr ""

#. type: Plain text
#: content/source/docs/compile-linux/index.adoc:73
msgid ""
"The cmake GUI might not be provided on all in systems.  To start the cmake "
"gui run `cmake-gui .`"
msgstr ""

#. type: Plain text
#: content/source/docs/compile-linux/index.adoc:75
msgid "press `Configure`"
msgstr ""

#. type: Plain text
#: content/source/docs/compile-linux/index.adoc:76
msgid ""
"select `Unix Makefiles` and `Use default native compilers` (that are the "
"default options) and press `Finish`"
msgstr ""

#. type: Plain text
#: content/source/docs/compile-linux/index.adoc:77
msgid "press `Configure` again until all list entries are white"
msgstr ""

#. type: Plain text
#: content/source/docs/compile-linux/index.adoc:78
msgid ""
"look at the log window for information and errors (look for red lines with "
"\" &gt; \" in front)"
msgstr ""

#. type: Plain text
#: content/source/docs/compile-linux/index.adoc:79
msgid "enable the components you want to compile in: ROR_*"
msgstr ""

#. type: Plain text
#: content/source/docs/compile-linux/index.adoc:80
msgid "press `Configure` again until the `Generate` button is click-able"
msgstr ""

#. type: Plain text
#: content/source/docs/compile-linux/index.adoc:81
msgid "press `Generate`"
msgstr ""

#. type: Plain text
#: content/source/docs/compile-linux/index.adoc:82
msgid "close cmake-gui"
msgstr ""

#. type: Title ==
#: content/source/docs/compile-linux/index.adoc:83
#, no-wrap
msgid "Building the source code"
msgstr ""

#. type: Plain text
#: content/source/docs/compile-linux/index.adoc:85
msgid "To start building simply run `make`"
msgstr ""

#. type: Plain text
#: content/source/docs/compile-linux/index.adoc:87
msgid ""
"You can speed up compilation by making use of multithreading. Just add a -"
"j**x** flag where *x* is the number of simultaneous build jobs you want "
"(basic rule: one job per cpu core)."
msgstr ""

#. type: Title ==
#: content/source/docs/compile-linux/index.adoc:88
#, no-wrap
msgid "Updating existing sources"
msgstr ""

#. type: Plain text
#: content/source/docs/compile-linux/index.adoc:91
msgid ""
"If you already got the sources and just want to update, follow the steps "
"below:"
msgstr ""

#. type: delimited block -
#: content/source/docs/compile-linux/index.adoc:95
#, no-wrap
msgid ""
"cd rigs-of-rods\n"
"git pull\n"
msgstr ""

#. type: delimited block -
#: content/source/docs/compile-linux/index.adoc:99
#, no-wrap
msgid ""
"rm -f CMakeCache.txt\n"
"rm -rf CmakeFiles/\n"
"cmake-gui .\n"
msgstr ""

#. type: delimited block -
#: content/source/docs/compile-linux/index.adoc:101
#, no-wrap
msgid "make\n"
msgstr ""
